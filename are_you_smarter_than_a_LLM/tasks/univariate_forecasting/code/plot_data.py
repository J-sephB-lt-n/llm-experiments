"""
This code was entirely generated by ChatGPT3.5 
(bearing in mind that this is not even the best available OpenAI model at time of writing)

The script is run from /univariate_forecasting/:
    $ python -m code.plot_data

The prompt I used was:
"
You are an expert python programmer and data analyst.
Please write a clean and beautiful python script which does the following:
    1. Reads in the contents of the csv file at ./assets/simdata.csv
        - The names of the 2 columns in this CSV file are:
            Column 1: "YearMonth"
            Column 2: "Sales (m)"
    2. Plots the data on a line plot using matplotlib
        - Please stack the years on top of one another so that the years are easily visually comparable
    5. Please label the axes appropriately
    6. Please place axis tick marks appropriately
    7. Please export the plot to ./assets/data_plot.png
        - Please make the file as small as possible, keeping the plot legible
    8. Please use only packages in the python standard library
"
"""

import csv
import matplotlib.pyplot as plt

# Read data from CSV file
def read_csv(file_path):
    data = []
    with open(file_path, 'r', newline='') as csvfile:
        reader = csv.reader(csvfile)
        next(reader)  # Skip header
        for row in reader:
            data.append((row[0], float(row[1])))
    return data

# Function to plot data
def plot_data(data):
    years = {}
    for year_month, sales in data:
        year = year_month[:4]
        if year in years:
            years[year].append(sales)
        else:
            years[year] = [sales]
    plt.figure(figsize=(10, 6))
    for year, sales_data in years.items():
        plt.plot(range(1, len(sales_data) + 1), sales_data, label=year)
    plt.xlabel('Month')
    plt.ylabel('Sales (m)')
    plt.title('Monthly Sales Over Years')
    plt.xticks(range(1, 13), ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'])
    plt.legend()
    plt.tight_layout()
    plt.savefig('./assets/data_plot.png', dpi=100)
    plt.show()

if __name__ == "__main__":
    file_path = './assets/simdata.csv'
    data = read_csv(file_path)
    plot_data(data)

